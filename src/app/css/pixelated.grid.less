
/* ========================================
===============    GRID     ===============
======================================== */

.row {
	padding: 0.5% 0;
	width: 100%;
	overflow: hidden;
	clear: both;
}

.column {
	padding: 0 0.5%;
}

/* .row .column:first-child {
	padding-left: 0;
}*/

/* .row .column:last-child {
	padding-right: 0;
} */

@media screen and (max-width: 480px) {
    .row {
        /* padding: 0; */
        padding: 1%;
    }
    /* .column,
    .row .column:first-child,
    .row .column:last-child {
    	padding: 1%;
    } */
}

@grids: 12;
@gutter: 100% / (@grids - 1);
.gridLoop (@index) when (@index > 0) {
	@gridVal: (100% / @grids * @index);
	.grid@{index}, .grid@{index}fix { float: left; width: @gridVal; }
	/* display: inline; margin-left: @gutter; */
	.push@{index}, .push@{index}fix { margin-left: @gridVal; }
	.pull@{index}, .pull@{index}fix { margin-right: @gridVal; }
	@media screen and (max-width: 480px) {
		.grid@{index}{ width: 100%; }
		.push@{index}{ margin-left: 0; }
		.pull@{index}{ margin-right: 0; }
	}
    .gridLoop(@index - 1);
}
.gridLoop(0) {}
.gridLoop(@grids);
